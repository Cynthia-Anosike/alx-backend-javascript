{"{\"assumptions\":{},\"sourceRoot\":\"/data/data/com.termux/files/home/storage/alx-backend-javascript/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/data/data/com.termux/files/home/storage/alx-backend-javascript\",\"filename\":\"/data/data/com.termux/files/home/storage/alx-backend-javascript/main.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/data/data/com.termux/files/home/storage/alx-backend-javascript\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"syntax-class-static-block\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-private-property-in-object\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-class-properties\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"syntax-import-meta\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.22.9:development":{"value":{"code":"\"use strict\";\n\n// Imagine we have a function that returns a Promise to simulate an asynchronous operation.\nfunction fetchData() {\n  return new Promise((resolve, reject) => {\n    // Simulate a delayed response (e.g., fetching data from a server).\n    setTimeout(() => {\n      const data = {\n        message: \"Hello, Promises!\"\n      };\n      resolve(data); // The Promise is fulfilled with the data.\n      // If there was an error, you can reject the Promise: reject(\"Error occurred!\");\n    }, 2000); // Simulating a 2-second delay.\n  });\n}\n\n// Using the fetchData function that returns a Promise.\nfetchData().then(data => {\n  console.log(data.message); // Output: \"Hello, Promises!\"\n}).catch(error => {\n  console.error(error); // Handle errors if the Promise is rejected.\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmZXRjaERhdGEiLCJQcm9taXNlIiwicmVzb2x2ZSIsInJlamVjdCIsInNldFRpbWVvdXQiLCJkYXRhIiwibWVzc2FnZSIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlcnJvciJdLCJzb3VyY2VSb290IjoiL2RhdGEvZGF0YS9jb20udGVybXV4L2ZpbGVzL2hvbWUvc3RvcmFnZS9hbHgtYmFja2VuZC1qYXZhc2NyaXB0LyIsInNvdXJjZXMiOlsibWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbWFnaW5lIHdlIGhhdmUgYSBmdW5jdGlvbiB0aGF0IHJldHVybnMgYSBQcm9taXNlIHRvIHNpbXVsYXRlIGFuIGFzeW5jaHJvbm91cyBvcGVyYXRpb24uXG5mdW5jdGlvbiBmZXRjaERhdGEoKSB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgLy8gU2ltdWxhdGUgYSBkZWxheWVkIHJlc3BvbnNlIChlLmcuLCBmZXRjaGluZyBkYXRhIGZyb20gYSBzZXJ2ZXIpLlxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29uc3QgZGF0YSA9IHsgbWVzc2FnZTogXCJIZWxsbywgUHJvbWlzZXMhXCIgfTtcbiAgICAgIHJlc29sdmUoZGF0YSk7IC8vIFRoZSBQcm9taXNlIGlzIGZ1bGZpbGxlZCB3aXRoIHRoZSBkYXRhLlxuICAgICAgLy8gSWYgdGhlcmUgd2FzIGFuIGVycm9yLCB5b3UgY2FuIHJlamVjdCB0aGUgUHJvbWlzZTogcmVqZWN0KFwiRXJyb3Igb2NjdXJyZWQhXCIpO1xuICAgIH0sIDIwMDApOyAvLyBTaW11bGF0aW5nIGEgMi1zZWNvbmQgZGVsYXkuXG4gIH0pO1xufVxuXG4vLyBVc2luZyB0aGUgZmV0Y2hEYXRhIGZ1bmN0aW9uIHRoYXQgcmV0dXJucyBhIFByb21pc2UuXG5mZXRjaERhdGEoKVxuICAudGhlbigoZGF0YSkgPT4ge1xuICAgIGNvbnNvbGUubG9nKGRhdGEubWVzc2FnZSk7IC8vIE91dHB1dDogXCJIZWxsbywgUHJvbWlzZXMhXCJcbiAgfSlcbiAgLmNhdGNoKChlcnJvcikgPT4ge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOyAvLyBIYW5kbGUgZXJyb3JzIGlmIHRoZSBQcm9taXNlIGlzIHJlamVjdGVkLlxuICB9KTtcbiJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUNBLFNBQVNBLFNBQVNBLENBQUEsRUFBRztFQUNuQixPQUFPLElBQUlDLE9BQU8sQ0FBQyxDQUFDQyxPQUFPLEVBQUVDLE1BQU0sS0FBSztJQUN0QztJQUNBQyxVQUFVLENBQUMsTUFBTTtNQUNmLE1BQU1DLElBQUksR0FBRztRQUFFQyxPQUFPLEVBQUU7TUFBbUIsQ0FBQztNQUM1Q0osT0FBTyxDQUFDRyxJQUFJLENBQUMsQ0FBQyxDQUFDO01BQ2Y7SUFDRixDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztFQUNaLENBQUMsQ0FBQztBQUNKOztBQUVBO0FBQ0FMLFNBQVMsQ0FBQyxDQUFDLENBQ1JPLElBQUksQ0FBRUYsSUFBSSxJQUFLO0VBQ2RHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDSixJQUFJLENBQUNDLE9BQU8sQ0FBQyxDQUFDLENBQUM7QUFDN0IsQ0FBQyxDQUFDLENBQ0RJLEtBQUssQ0FBRUMsS0FBSyxJQUFLO0VBQ2hCSCxPQUFPLENBQUNHLEtBQUssQ0FBQ0EsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUN4QixDQUFDLENBQUMifQ==","map":{"version":3,"names":["fetchData","Promise","resolve","reject","setTimeout","data","message","then","console","log","catch","error"],"sourceRoot":"/data/data/com.termux/files/home/storage/alx-backend-javascript/","sources":["main.js"],"sourcesContent":["// Imagine we have a function that returns a Promise to simulate an asynchronous operation.\nfunction fetchData() {\n  return new Promise((resolve, reject) => {\n    // Simulate a delayed response (e.g., fetching data from a server).\n    setTimeout(() => {\n      const data = { message: \"Hello, Promises!\" };\n      resolve(data); // The Promise is fulfilled with the data.\n      // If there was an error, you can reject the Promise: reject(\"Error occurred!\");\n    }, 2000); // Simulating a 2-second delay.\n  });\n}\n\n// Using the fetchData function that returns a Promise.\nfetchData()\n  .then((data) => {\n    console.log(data.message); // Output: \"Hello, Promises!\"\n  })\n  .catch((error) => {\n    console.error(error); // Handle errors if the Promise is rejected.\n  });\n"],"mappings":";;AAAA;AACA,SAASA,SAASA,CAAA,EAAG;EACnB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC;IACAC,UAAU,CAAC,MAAM;MACf,MAAMC,IAAI,GAAG;QAAEC,OAAO,EAAE;MAAmB,CAAC;MAC5CJ,OAAO,CAACG,IAAI,CAAC,CAAC,CAAC;MACf;IACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;AACJ;;AAEA;AACAL,SAAS,CAAC,CAAC,CACRO,IAAI,CAAEF,IAAI,IAAK;EACdG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;EAChBH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC"}},"mtime":1690827264473}}